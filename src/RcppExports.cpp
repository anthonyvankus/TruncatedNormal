// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// lnNpr
NumericVector lnNpr(NumericVector a, NumericVector b, bool check);
RcppExport SEXP _TruncatedNormal_lnNpr(SEXP aSEXP, SEXP bSEXP, SEXP checkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< bool >::type check(checkSEXP);
    rcpp_result_gen = Rcpp::wrap(lnNpr(a, b, check));
    return rcpp_result_gen;
END_RCPP
}
// cholperm
List cholperm(arma::mat Sigma, NumericVector l, NumericVector u);
RcppExport SEXP _TruncatedNormal_cholperm(SEXP SigmaSEXP, SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(cholperm(Sigma, l, u));
    return rcpp_result_gen;
END_RCPP
}
// Phinv
NumericVector Phinv(NumericVector p, NumericVector l, NumericVector u);
RcppExport SEXP _TruncatedNormal_Phinv(SEXP pSEXP, SEXP lSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l(lSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(Phinv(p, l, u));
    return rcpp_result_gen;
END_RCPP
}
